@page "/admin"
@attribute [Authorize]

<MudOverlay @bind-Visible="showLoadingArt" DarkBackground="true" ZIndex="9999" AutoClose="true">
     <MudProgressCircular Color="Color.Secondary" Indeterminate="true" />
</MudOverlay>

<MudGrid>
    <MudItem lg="2">
        <MudButton Variant="Variant.Outlined" Color="Color.Primary" @onclick="GenerateRandomUsers">
            Generate Sample Random User Data
        </MudButton>
    </MudItem>
    <MudItem lg="2">
        <MudButton Variant="Variant.Outlined" Color="Color.Secondary" @onclick="ImportInitialPokemonDataAsync">
            Generate Sample Prompt Data
        </MudButton>
    </MudItem>
</MudGrid>


@code {

    private bool showLoadingArt;

    private List<User> users;
    private IEnumerable<Pokemon> pokemonList;

    protected async override Task OnInitializedAsync()
    {
        showLoadingArt = true;

        users = await userData.GetAllUsersAsync();

        showLoadingArt = false;
    }

    private async Task GenerateRandomUsers()
    {
        showLoadingArt = true;
        StateHasChanged();

        var fakeUsers = new Faker<User>()
            .RuleFor<string>(u => u.Username, f => f.Random.Word())
            .RuleFor<string>(u => u.FirstName, f => f.Name.FirstName())
            .RuleFor<string>(u => u.LastName, f => f.Name.LastName());

        await userData.CreateMultipleUsersAsync(fakeUsers.Generate(15));

        users = await userData.GetAllUsersAsync();

        showLoadingArt = false;
        StateHasChanged();
    }

    private async Task ImportInitialPokemonDataAsync()
    {
        showLoadingArt = true;

        pokemonList = await pokeApiService.GetPokemonListAsync(1300, 0);

        showLoadingArt = false;
        StateHasChanged();
    }
}