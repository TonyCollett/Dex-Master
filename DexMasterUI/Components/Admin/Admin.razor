@page "/admin"

<MudOverlay @bind-Visible="_showLoadingArt" DarkBackground="true" ZIndex="9999" AutoClose="true">
     <MudProgressCircular Color="Color.Secondary" Indeterminate="true" />
</MudOverlay>

<MudGrid>
    <MudItem lg="2">
        <MudButton Variant="Variant.Outlined" Color="Color.Primary" @onclick="GenerateRandomUsers">
            Generate Sample Random User Data
        </MudButton>
    </MudItem>
    <MudItem lg="2">
        <MudButton Variant="Variant.Outlined" Color="Color.Secondary" @onclick="ImportInitialPokemonDataAsync">
            Import Pokemon Data
        </MudButton>
    </MudItem>
</MudGrid>


@code {

    private bool _showLoadingArt;

    private async Task GenerateRandomUsers()
    {
        _showLoadingArt = true;
        StateHasChanged();

        var fakeUsers = new Faker<User>()
            .RuleFor<string>(u => u.Username, f => f.Random.Word())
            .RuleFor<string>(u => u.FirstName, f => f.Name.FirstName())
            .RuleFor<string>(u => u.LastName, f => f.Name.LastName());

        await userData.CreateMultipleUsersAsync(fakeUsers.Generate(15));

        _showLoadingArt = false;
        StateHasChanged();
    }

    private async Task ImportInitialPokemonDataAsync()
    {
        _showLoadingArt = true;
        int pokedexNumber = 0;

        while (pokedexNumber < 1017)
        {
            IEnumerable<Pokemon> pokemonList = await pokeApiService.GetPokemonListAsync(100, pokedexNumber);
            await pokemonData.CreateMultiplePokemonAsync(pokemonList);
            pokedexNumber += 100;
        }

        _showLoadingArt = false;
        StateHasChanged();
    }
}