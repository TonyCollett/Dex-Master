<MudStack Row="true">
    <MudSelect T="string" Value="_selectedGeneration" ValueChanged="GenerationChanged" Label="Generation" Variant="Variant.Filled" AnchorOrigin="Origin.BottomCenter">
        @if (_generations != null && _generations.Any())
        {
            @foreach (var generation in _generations)
            {
                <MudSelectItem Value="@(generation.Name)"/>
            }
        }
    </MudSelect>
    <MudSelect T="string" Value="_selectedVersionGroup" ValueChanged="VersionGroupChanged" Label="Version Group" Variant="Variant.Filled" AnchorOrigin="Origin.BottomCenter">
        @if (_generation != null && _generation.VersionGroups.Any())
        {
            @foreach (var versionGroup in _generation.VersionGroups)
            {
                <MudSelectItem Value="@(versionGroup.Name)"/>
            }
        }
    </MudSelect>
    <MudSelect T="string" Value="_selectedVersion" ValueChanged="VersionChanged" Label="Version" Variant="Variant.Filled" AnchorOrigin="Origin.BottomCenter">
        @if (_versionGroup != null && _versionGroup.Versions.Any())
        {
            @foreach (var version in _versionGroup.Versions)
            {
                <MudSelectItem Value="@(version.Name)"/>
            }
        }
    </MudSelect>
</MudStack>

@code {
    [Parameter]
    public EventCallback<string> SelectedVersionChanged { get; set; }

    private IEnumerable<Generation> _generations;
    private Generation _generation;
    private VersionGroup _versionGroup;
    private PokeApiNet.Version _version;
    private string _selectedGeneration = "";
    private string _selectedVersionGroup = "";
    private string _selectedVersion = "";

    protected override async Task OnInitializedAsync()
    {
        _generations = await pokeApiService.GetGenerationListAsync();
        List<Generation> gen = _generations.ToList();
        if (_generations != null && gen.Any())
        {
            _generation = await pokeApiService.GetGenerationByNameAsync(gen.Last().Name);
            _selectedGeneration = gen.Last().Name;
        }
    }
    
    private async Task GenerationChanged(string value)
    {
        _generation = await pokeApiService.GetGenerationByNameAsync(value);
        _selectedGeneration = _generation.Name;
    }
    
    private async Task VersionGroupChanged(string value)
    {
        _versionGroup = await pokeApiService.GetVersionGroupByNameAsync(value);
        _selectedVersionGroup = _versionGroup.Name;
        
        if (_versionGroup.Versions.Count == 1)
        {
            var version = await pokeApiService.GetVersionByNameAsync(_versionGroup.Versions.First().Name);
            _selectedVersion = version.Name;
            await SelectedVersionChanged.InvokeAsync(version.Name);
        }
        else
        {
            StateHasChanged();
        }
    }
    
    private async Task VersionChanged(string value)
    {
        _version = await pokeApiService.GetVersionByNameAsync(value);
        _selectedVersion = _version.Name;
        await SelectedVersionChanged.InvokeAsync(_selectedVersion);
    }
}