@using Version = PokeApiNet.Version

<MudGrid>
    <MudItem lg="6">
        <MudSelect T="string"
                   Value="_selectedGeneration"
                   ValueChanged="GenerationChanged"
                   Label="Generation"
                   Variant="Variant.Filled"
                   AnchorOrigin="Origin.BottomCenter"
                   Disabled="_generationDisabled">
            <MudSelectItem Value="@("national")">National</MudSelectItem>
            @if (_generations != null && _generations.Any())
            {
                @foreach (Generation generation in _generations)
                {
                    <MudSelectItem Value="@(generation.Name)">@CommonFunctions.CleanAndCapitalise(generation.Name)</MudSelectItem>
                }
            }
        </MudSelect>
    </MudItem>
    <MudItem lg="6">
        <MudSelect T="string"
                   Value="_selectedVersion"
                   ValueChanged="VersionChanged"
                   Label="Version"
                   Variant="Variant.Filled"
                   AnchorOrigin="Origin.BottomCenter"
                   Disabled="_versionDisabled">
            @if (_versionsInGeneration != null && _versionsInGeneration.Any())
            {
                @foreach (Version version in _versionsInGeneration)
                {
                    <MudSelectItem Value="@(version.Name)">@CommonFunctions.CleanAndCapitalise(version.Name)</MudSelectItem>
                }
            }
            else
            {
                <MudSelectItem Value="@("national")">National</MudSelectItem>
            }
        </MudSelect>
    </MudItem>
</MudGrid>

@code {
    [Parameter]
    public EventCallback<string> SelectedVersionChanged { get; set; }

    private IEnumerable<Generation> _generations;
    private IEnumerable<Version> _versionsInGeneration;
    private Version _version;
    private bool _generationDisabled = true;
    private bool _versionDisabled = true;
    private string _selectedGeneration = "national";
    private string _selectedVersion = "national";

    protected override async Task OnInitializedAsync()
    {
        _generationDisabled = _versionDisabled = true;
        _generations = await pokeApiService.GetGenerationListAsync();
        _generationDisabled = _versionDisabled = false;
    }
    
    private async Task GenerationChanged(string value)
    {
        _versionDisabled = true;

        if (string.IsNullOrWhiteSpace(value) == false)
        {
            if (value == "national")
            {
                _selectedGeneration = "national";
                _selectedVersion = "national";
                _versionDisabled = true;
            }
            else
            {
                Generation generation = await pokeApiService.GetGenerationByNameAsync(value);
                _selectedGeneration = generation.Name;
                _selectedVersion = "";

                _versionsInGeneration = await pokeApiService.GetAllVersionsOfGenerationAsync(generation);
                
                _selectedVersion = _versionsInGeneration.First().Name;
                await SelectedVersionChanged.InvokeAsync(_selectedVersion);
            }
        }
        
        _versionDisabled = false;
        StateHasChanged();
    }
    
    private async Task VersionChanged(string value)
    {
        _version = await pokeApiService.GetVersionByNameAsync(value);
        _selectedVersion = _version.Name;
        await SelectedVersionChanged.InvokeAsync(_selectedVersion);
        StateHasChanged();
    }
}