<MudStack>
    <MudSelect T="string"
               SelectedValuesChanged="(()=>GenerationChanged(value))" 
               Label="Generation" 
               Variant="Variant.Filled" 
               AnchorOrigin="Origin.BottomCenter">
        @if (_generations != null && _generations.Any())
        {        
            @foreach (var generation in _generations)
            {
                <MudSelectItem Value="@(generation.Name)"/>
            }
        }
    </MudSelect>

    @if (_selectedGeneration != null)
    {
        <MudChipSet @bind-SelectedChip="_selectedVerGrp" SelectedChipsChanged="VersionGroupChanged" Mandatory="true">
            @foreach (var versionGroup in _selectedGeneration.VersionGroups)
            {
                <MudChip Color="Color.Primary" Text="@versionGroup.Name" SelectedColor="Color.Success">@versionGroup.Name</MudChip>
            }
        </MudChipSet>
    }
    @if (_selectedVersionGroup != null)
    {
        <MudChipSet @bind-SelectedChip="_selectedVer" SelectedChipsChanged="VersionChanged" Mandatory="true">
            @foreach (var version in _selectedVersionGroup.Versions)
            {
                <MudChip Color="Color.Primary" Text="@version.Name" SelectedColor="Color.Success">@version.Name</MudChip>
            }
        </MudChipSet>
    }
</MudStack>

@code {
    [Parameter]
    public EventCallback<string> SelectedVersionChanged { get; set; }

    private IEnumerable<Generation> _generations;
    private string _selectedGen;
    private MudChip _selectedVerGrp;
    private MudChip _selectedVer;
    private Generation _selectedGeneration;
    private VersionGroup _selectedVersionGroup;
    private PokeApiNet.Version _selectedVersion;

    protected override async Task OnParametersSetAsync()
    {
        _generations = await pokeApiService.GetGenerationListAsync();
    }
    
    private async Task GenerationChanged(string value)
    {
        _selectedGeneration = await pokeApiService.GetGenerationByNameAsync(value);
    }
    
    private async Task VersionGroupChanged()
    {
        _selectedVersionGroup = await pokeApiService.GetVersionGroupByNameAsync(_selectedVerGrp.Text);
    }
    
    private async Task VersionChanged()
    {
        _selectedVersion = await pokeApiService.GetVersionByNameAsync(_selectedVer.Text);
        await SelectedVersionChanged.InvokeAsync(_selectedVersion.Name);
    }
}