@if (Pokemon != null && _abilities != null && _abilities.Any())
{
    <MudSimpleTable>
        <thead>
        <tr>
            @foreach (var h in _headings)
            {
                <th style="width: @(h == _headings[0] ? "15%" : h == _headings[1] ? "75%" : "10%");">@h</th>
            }
        </tr>
        </thead>
        <tbody>
            @foreach (var row in _abilities)
            {
                <tr>
                    <td>@CommonFunctions.CleanAndCapitalise(row.Name)</td>
                    <td>@row.EffectEntries.Where(a => a.Language.Name == "en").Select(a => a.ShortEffect).FirstOrDefault()</td>
                    <td>
                        @if (row.Name == Pokemon.Abilities.FirstOrDefault(a => a.IsHidden)?.Ability.Name)
                        {
                            <MudChip Color="Color.Secondary">Hidden Ability</MudChip>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </MudSimpleTable>
}


@code {
    [Parameter]
    public Pokemon Pokemon { get; set; }
    
    [Parameter]
    public string VersionGroup { get; set; } = "sun-moon";

    private IEnumerable<Ability> _abilities = null;
    private string[] _headings = {
        "Ability Name",
        "Details",
        ""
    };

    protected override async Task OnParametersSetAsync()
    {
        _abilities = await pokeApiService.GetPokemonAbilitiesAsync(Pokemon);
    }

}