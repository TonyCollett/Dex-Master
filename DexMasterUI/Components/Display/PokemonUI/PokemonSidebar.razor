@using DexMasterLibrary.Enums

@if (PokemonSpecies != null && _pokemonVarieties != null)
{
    <MudContainer MaxWidth="MaxWidth.Large">
        <MudGrid Spacing="1" Justify="Justify.SpaceEvenly">
            <MudItem lg="12">
                <VersionPicker />
            </MudItem>
            <MudItem lg="12">
                <MudPaper Class="d-flex align-center justify-center mud-width-full py-2">
                    <MudText Typo="Typo.h2">@_pokemonInfo.Name</MudText>
                </MudPaper>
            </MudItem>
            <MudItem lg="6">
                <MudPaper Class="d-flex align-center justify-center mud-width-full py-2">
                    <MudStack AlignItems="AlignItems.Center">
                        <MudText Typo="Typo.caption">Type 1</MudText>
                        <MudText Typo="Typo.h3">@_pokemonInfo.Type1</MudText>
                    </MudStack>
                </MudPaper>
            </MudItem>
            <MudItem lg="6">
                <MudPaper Class="d-flex align-center justify-center mud-width-full py-2">
                    <MudStack AlignItems="AlignItems.Center">
                        <MudText Typo="Typo.caption">Type 2</MudText>
                        <MudText Typo="Typo.h3">@_pokemonInfo.Type2</MudText>
                    </MudStack>
                </MudPaper>
            </MudItem>
            <MudItem lg="12">
                <MudPaper Class="d-flex align-center justify-center mud-width-full py-2">
                    <MudImage Src="@_pokemonInfo.MainSprite"/>
                </MudPaper>
            </MudItem>
            <MudItem lg="6">
                <MudPaper Class="d-flex align-center justify-center mud-width-full py-2">
                    <MudStack AlignItems="AlignItems.Center">
                        <MudText Align="Align.Center" Typo="Typo.caption">Height</MudText>
                        <MudText Typo="Typo.h6">@_pokemonInfo.Height</MudText>
                    </MudStack>
                </MudPaper>
            </MudItem>
            <MudItem lg="6">
                <MudPaper Class="d-flex align-center justify-center mud-width-full py-2">
                    <MudStack AlignItems="AlignItems.Center">
                        <MudText Typo="Typo.caption">Weight</MudText>
                        <MudText Typo="Typo.h6">@_pokemonInfo.Weight</MudText>
                    </MudStack>
                </MudPaper>
            </MudItem>
            <MudItem lg="12">
                <MudPaper Class="d-flex align-center justify-center mud-width-full py-2">
                    <MudStack AlignItems="AlignItems.Center">
                        <MudText Typo="Typo.caption">Dex Entry</MudText>
                        <MudText Typo="Typo.body1">@_pokemonInfo.FlavourText</MudText>
                    </MudStack>
                </MudPaper>
            </MudItem>
            <MudSpacer />
            <MudItem lg="12">
                <MudPaper Class="d-flex align-center justify-center mud-width-full py-2">
                    <MudButton OnClick="@(() => NavigateToPokemon())">View all details of @PokemonSpecies.Name</MudButton>
                </MudPaper>
            </MudItem>
        </MudGrid>
    </MudContainer>
}

@code {
    [Parameter] 
    public PokemonSpecies PokemonSpecies { get; set; }

    [CascadingParameter] 
    public User LoggedInUser { get; set; }

    private IEnumerable<Pokemon> _pokemonVarieties;

    private PokemonInfo _pokemonInfo = new();

    private class PokemonInfo
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public string Height { get; set; }
        public string Weight { get; set; }
        public List<PokemonAbility> Abilities { get; set; }
        public Types Type1 { get; set; }
        public Types? Type2 { get; set; }
        public string MainSprite { get; set; }
        public string FlavourText { get; set; }
    }
    
    protected override async Task OnParametersSetAsync()
    {
        if (PokemonSpecies == null) return;
        
        _pokemonVarieties = await pokeApiService.GetPokemonVarietiesAsync(PokemonSpecies);
        
        Pokemon defaultPokemonVariety = _pokemonVarieties.FirstOrDefault(x => x.IsDefault);
        
        _pokemonInfo.Id = PokemonSpecies.Id;
        _pokemonInfo.Name = CommonFunctions.Capitalise(PokemonSpecies.Name);
        _pokemonInfo.Height = defaultPokemonVariety.Height + "cm";
        _pokemonInfo.Weight = defaultPokemonVariety.Weight + "g";
        _pokemonInfo.Abilities = defaultPokemonVariety.Abilities;
        _pokemonInfo.Type1 = CommonFunctions.ConvertStringToEnum<Types>(defaultPokemonVariety.Types[0].Type.Name).GetValueOrDefault();
        _pokemonInfo.Type2 = defaultPokemonVariety.Types.Count > 1 ? CommonFunctions.ConvertStringToEnum<Types>(defaultPokemonVariety.Types[1].Type.Name).GetValueOrDefault() : null;
        _pokemonInfo.MainSprite = defaultPokemonVariety.Sprites.Other.OfficialArtwork.FrontDefault;
        _pokemonInfo.FlavourText = PokemonSpecies.FlavorTextEntries.FirstOrDefault(x => x.Language.Name == "en")?.FlavorText.Replace("\n", " ").Replace("\f", " ");
    }
    
    private void NavigateToPokemon()
    {
        navManager.NavigateTo($"/Pokemon/{PokemonSpecies.Name}");
    }
}