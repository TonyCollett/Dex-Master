@if (Pokemon != null)
{
    <MudCard Outlined="true">
        <MudCardHeader>
            <CardHeaderAvatar>
                <MudAvatar Color="Color.Dark" Variant="Variant.Filled">
                    @Pokemon.NationalDexNumber
                </MudAvatar>
            </CardHeaderAvatar>
            <CardHeaderContent>
                <MudText Typo="Typo.body1">@CommonFunctions.Capitalise(Pokemon.Name)</MudText>
                <MudText Typo="Typo.body2">@_pokemonTypes</MudText>
            </CardHeaderContent>
            <CardHeaderActions>
                <MudIconButton Icon="@Icons.Material.Filled.OpenInNew" Variant="Variant.Outlined" Color="Color.Primary"/>
            </CardHeaderActions>
        </MudCardHeader>
        <!--<MudCardMedia Image="@Pokemon.BasicImageSpriteUrl" />-->
        <MudCardContent>
            
        </MudCardContent>
        <MudCardActions>
            @if (LoggedInUser != null)
            {
            <MudTooltip Text="Favourite" Arrow="true" Placement="Placement.Bottom" Color="Color.Primary">
                <MudIconButton Icon="@Icons.Material.Outlined.Star" Color="Color.Primary"/>
            </MudTooltip>
            <MudTooltip Text="Caught" Arrow="true" Placement="Placement.Bottom" Color="Color.Primary">
                <MudIconButton Icon="@Icons.Material.TwoTone.CatchingPokemon" Color="Color.Primary"/>
            </MudTooltip>
            <MudTooltip Text="Caught Shiny" Arrow="true" Placement="Placement.Bottom" Color="Color.Primary">
                <MudIconButton Icon="@Icons.Material.Filled.CatchingPokemon" Color="Color.Primary"/>
            </MudTooltip>
            }
            <MudTooltip Text="Share" Arrow="true" Placement="Placement.Bottom" Color="Color.Primary">
                <MudIconButton Icon="@Icons.Material.Filled.Share" Color="Color.Primary"/>
            </MudTooltip>
        </MudCardActions>
    </MudCard>
}

@code {
    [Parameter] 
    public BasicPokemon Pokemon { get; set; }

    [CascadingParameter] 
    public User LoggedInUser { get; set; }

    private bool _readOnly;
    private bool _userIsAuthenticated;
    private string _pokemonTypes;

    protected override async Task OnParametersSetAsync()
    {
        AuthenticationState authState = await authProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity != null) _userIsAuthenticated = authState.User.Identity.IsAuthenticated;
        
        _pokemonTypes = Pokemon.Type1.ToString() + " " + Pokemon.Type2.ToString();

        _readOnly = !_userIsAuthenticated;
    }

    private async Task OpenDialog()
    {
        var parameters = new DialogParameters { ["PokemonId"] = Pokemon.Id, ["LoggedInUser"] = LoggedInUser };
        var options = new DialogOptions { CloseOnEscapeKey = true, NoHeader = true};
        await dialogService.ShowAsync<PokemonCardDialog>("Show Pokemon", parameters, options);
    }
}