@using DexMasterLibrary.Enums
@if (_pokemon != null && _pokemonSpecies != null)
{
    <VersionPicker SelectedVersionChanged="SetVersion"></VersionPicker>
  
    <MudText Typo="Typo.h6">@_pokemonInfo.Name</MudText>
    <MudText Typo="Typo.h6">@_pokemonInfo.Type1</MudText>
    <MudText Typo="Typo.h6">@_pokemonInfo.Type2</MudText>
    <MudImage Src="@_pokemon.Sprites.FrontDefault"/>
    <MudText Typo="Typo.body1">@_pokemonInfo.FlavourText</MudText>
    
    @if (SelectedVersion != null)
    {
        <MudText>You selected @SelectedVersion</MudText>
    }
}

@code {
    [Parameter] 
    public int PokemonId { get; set; }

    [CascadingParameter] 
    public User LoggedInUser { get; set; }

    private string SelectedVersion { get; set; }
    private Pokemon _pokemon;
    private PokemonSpecies _pokemonSpecies;
    private PokemonInfo _pokemonInfo = new();

    private PokeApiService _pokeApiService = new();
    
  
    private class PokemonInfo
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public string Height { get; set; }
        public string Weight { get; set; }
        public List<PokemonAbility> Abilities { get; set; }
        public Types Type1 { get; set; }
        public Types? Type2 { get; set; }
        public string MainSprite { get; set; }
        public string FlavourText { get; set; }
    }
    
    protected override async Task OnParametersSetAsync()
    {
        _pokemon = await pokemonData.GetPokemonByIdAsync(PokemonId);
        _pokemonSpecies = await pokemonSpeciesData.GetPokemonSpeciesByIdAsync(PokemonId);

        if (_pokemon != null && _pokemonSpecies != null)
        {
            _pokemonInfo.Id = _pokemon.Id;
            _pokemonInfo.Name = _pokemon.Name;
            _pokemonInfo.Height = _pokemon.Height.ToString() + "cm";
            _pokemonInfo.Weight = _pokemon.Weight.ToString() + "g";
            _pokemonInfo.Abilities = _pokemon.Abilities;
            _pokemonInfo.Type1 = CommonFunctions.ConvertStringToEnum<Types>(_pokemon.Types[0].Type.Name).GetValueOrDefault();
            _pokemonInfo.Type2 = _pokemon.Types.Count > 1 ? CommonFunctions.ConvertStringToEnum<Types>(_pokemon.Types[1].Type.Name).GetValueOrDefault() : null;
            _pokemonInfo.MainSprite = _pokemon.Sprites.Other.OfficialArtwork.FrontDefault;
            _pokemonInfo.FlavourText = _pokemonSpecies.FlavorTextEntries.FirstOrDefault(x => x.Language.Name == "en").FlavorText;
        }
    }

    private void SetVersion(string version)
    {
        SelectedVersion = version;
    }
}