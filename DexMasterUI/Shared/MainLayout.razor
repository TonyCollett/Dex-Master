@inherits LayoutComponentBase

<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />
<MudDialogProvider 
    FullWidth="true"
    MaxWidth="MaxWidth.Medium"/>
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1" Dense="false">
        <MudText Class="pl-4" Typo="Typo.h4" @onclick="GoHome">Dex-Master</MudText>
        <MudSpacer />
        <MudStack AlignItems="AlignItems.Center" Row="true">
            <SearchBar OnSearchCallback="@PerformSearch"/>
            <MudDivider Vertical="true" FlexItem="true" />
            <MudToggleIconButton @bind-Toggled="@_isDarkMode" 
                Color="Color.Surface" Icon="@Icons.Material.Filled.DarkMode"
                ToggledColor="Color.Primary" ToggledIcon="@Icons.Material.Filled.LightMode" />
            <MudDivider Vertical="true" FlexItem="true" />
            <LoginDisplay LoggedInUser="@_loggedInUser" />
        </MudStack>
    </MudAppBar>
    <MudDrawer Open="true" ClipMode="DrawerClipMode.Always" Elevation="1" Variant="@DrawerVariant.Mini">
        <MudNavMenu Bordered="false">
            <MudNavLink @onclick="@(() => NavigateTo("PokeDex"))" Icon="@Icons.Material.Filled.NewReleases">
                PokeDex
            </MudNavLink>
            <MudNavLink @onclick="@(() => NavigateTo("ItemDex"))" Icon="@Icons.Material.Filled.Star">
                ItemDex
            </MudNavLink>
        </MudNavMenu>
    </MudDrawer>

    <MudMainContent Class="pt-16 px-5 pb-15">
        <MudContainer Class="mt-4" MaxWidth="MaxWidth.ExtraExtraLarge">
            @Body
        </MudContainer>
    </MudMainContent>

    <MudScrollToTop>
        <MudFab Color="Color.Tertiary" StartIcon="@Icons.Material.Filled.ArrowCircleUp" />
    </MudScrollToTop>
</MudLayout>

@code {
    private User _loggedInUser;
    private MudTheme _theme = new();
    private bool _isDarkMode = true;

    protected override async Task OnInitializedAsync()
    {
        _loggedInUser = await authProvider.GetUserFromAuthAsync(userData);
    }

    private void GoHome()
    {
        navManager.NavigateTo("/");
    }

    private void NavigateTo(string url)
    {
        navManager.NavigateTo($"/{url}");
        StateHasChanged();
    }

    private void PerformSearch(string searchText)
    {
        navManager.NavigateTo($"/Search/{searchText}");
    }
}